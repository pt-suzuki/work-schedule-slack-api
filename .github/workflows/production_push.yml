name: firebase deploy for Production

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "17.x"

      - name: Nodemodules install
        working-directory: ./functions
        run: npm install

      - name: Eslint
        working-directory: ./functions
        run: npm run lint

      - name: Jest
        working-directory: ./functions
        run: npm run test

  build_flow:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install expect command
        run: sudo apt-get install expect
      - name: Install firebase-tools
        run: sudo npm install -g firebase-tools
      - name: deploy to firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.PROD_FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.PROD_PROJECT_ID }}
        if: ${{ env.PROJECT_ID != '' && env.FIREBASE_TOKEN != ''}}
        uses: w9jds/firebase-action@master
        with:
          args: deploy --project ${{ secrets.PROD_PROJECT_ID }} -f
  slack_notification:
    runs-on: ubuntu-latest
    needs: build_flow

    steps:
      - name: Notify slack - URLs
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ env.SLACK_WEBHOOK_URL != '' && !failure() }}
        run: |
          curl -X POST --data-urlencode "payload={\"text\": \"${{ github.repository }} Deploy to production\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
          curl -X POST --data-urlencode "payload={\"text\": \"デプロイ対象 : ${{ github.sha }}\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Notify slack when failed
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ env.SLACK_WEBHOOK_URL != '' && failure() }}
        run: |
          curl -X POST --data-urlencode "payload={\"text\": \"${{ github.repository }}のデプロイに失敗しました\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
